このPGのデモについて
2017.08.08

***********************
デモの開発と状態について
**********************

今回は、ほぼ一から作ったシステムのデモを提出している。
作業時間：約45時間）

このデモはプロトの状態のバイナリ。
（本番想定のアプリやリリースできる状態になっているアプリではない）


システムの作成、アセットの調整（主にマテリアル）、モーションの作成とサウンドの実装等で、
ある程度、どういう範囲の中で僕が動かせるか見せるために、アプリを提出している。


**************************
プロトのコンセプトについて
**************************

今回は、プログラミングをしながら、仕様の作成/調整を行ったということ。

コンセプトとして、RPGのバトルだけど、コンセプトの実装はまだ未完成。
現時点では、できるのは、4X4のグリッドで[1,1]と[1,2]のユニットを自由に動かす
（4X4の空間でも3X4の空間を管理しているってこと）

フォーメーション、キャラのタイプから相性の関係を作って、ATK値とDEF値の遊びがあるような、
グリッド+ユニットの3つのコマンドを想定していた：一般的な攻撃、魔法みたいな攻撃とパワーアップ。

グリッドの状況とユニットのコマンドを混ぜて深く考えなくても、遊部られるけど、
考えたい場合は、深さがあるゲームになるかと思っていた。

「コンセプトを試してから、開発が続いていいかどうか」といえるような状況はゴールだった。

この動きは楽しいか、つまらないか、もしかしてユニットを動かしすぎて、
プレイヤーが疲れるかどうかということを確認できるのはこのプロトの大前提。


現時点では、6体のキャラ（Sサイズ= 4、 Lサイズ = 2）で遊べる。
グリッドの動きは自由になっているけど、今はまだ影響がない（実装のために延長の時間が必要になる）

各ユニットで三つの攻撃がある。魔法みたいなやつには、敵のタイプ次第、ATK値に影響があるという想定だけど、まだ未実装。
（この状態を表現するエフェクトがないからわかりづらい）
スコアの影響と一般的なアタックより高いATK値の仕組みは仮で入っている。

敵は三つのモンスター。
そのモンスターもパラメータがあって、定期的に攻撃する。

現状は、データの設計と仕組みがないので、仮の実装として、オブジェクトのアニメーションカーブにLVLを基にして、
ユニットのパラメータを出力するようにしている。

フォーメーションやリアリティの影響はまだない。
また、各ユニットのスペシャル攻撃と全体の攻撃も考慮されていたけど、時間の制限で切れた。


**************************
プログラミングについて
**************************

PGの状況は、完全にプロト。
アイディアを早めに試して、仕様の調整/追加作成を検討するために、
バグがあっても、きれいなコードとシステムの構成より、ユーザービリティを優先した。

結果として、パラメータpermission (private, public, internal等)はできる限り作成したけど、
絶対に早い段階で起こりやすいバッグも確認できるようなPGになっている。

また開発の時間を優先して、オブジェクトプールなど各パラメータのgetとsetのメソッド
を実装しないで、とりあえず、実装でアプリで仕様がちょこちょこ見えてると同時に
システムの構成とそのシステムのリスクと解決策を早い段階で考えられるようにしている。

（完璧な実装から、仕様変更で時間がもったいないということ）

プロトでも、残り作業は：
①コードの整理：
　●コメントがあるけど、見づらいコードになっている
　●オブジェクトのプールとハンドル等は利用されていないから、用意する。同時に、
　　パラメータとゲームオブジェクトの呼び出しの箇所を修正するのは必要になる。
　●マネージャの中身をもうちょっと分割する：サウンドマネージャ、当たり判定のマネージャ、
　　エフェクトのマネージャ、演出のマネージャ等
　●パラメータのpermissionの整理

②実装が足りないからわかりづらい箇所を修正する：
　●攻撃の種類とパーワーアップが伝わるようなUI、オーディオ、モーションの実装
　●キャラのアニメーションできれいに攻撃を見せる（現時点ではわかりづらい）
　●仮演出の実装（主にユニットはHPがなくなったところ）

③一個のでかいバグ：
　●バトルのタスク管理にで、死んだユニットのタスクが残っていたら、コマンドの入力の
タイミング次第だけど、死んだユニットは使えるのが確かなのに、ゲームがおかしくなって、
時々続くのは不能になる。

④仕様の意図を拡張する：
　●今は、攻撃の処理を行うときに、ほかのユニットで攻撃の予約ができるけど、
　　移動は不能。できるようになればいいけど、仕組み的にhややこしくなりそうだから、保留になった。


***********************
PGのファイルについて
**********************

ui3DEventHandler.cs (タッチのコマンドを認識するため)
BattleSceneManager.cs (バトルのシステム：ユニットの取得、グリッド内での動きの管理、UIの処理、サウンドの処理など）
PlayerUnit.cs (各ユニットのステータスの管理：スタンドバイ、待ち中、攻撃など)
EnemyUnit.cs (PlayerUnitと一緒だけど、敵のバージョン)
rotate.cs (ユニットの上で回転しているキューブのため）


今回は作成されていないファイル：
①VertexEffectsのフォルダーには、文字にアウトラインが出せるようなスクリプトがある。
　昔はネットから広がって今までそのままで利用している。

②SplineModules
  過去のプロジェクトのために、僕は編集されたプラグイン。
　これでパスを作るのは可能です。今回は、開発をちょっとスピードアップするために、
　使っている。キャラとキャラが戦うときに、このカーブを使う。


***********************
その他の備考
**********************

グラフィック的に、あんまり調整を行っていない（バイナリが小さくなるためには、テクスチャとマテリアルの設定を行った）
しかし、最初は考えた要素が入っている。遊んだ後はまだ他rていない部分、わかりづらい部分があるんだとわかったけど、
システムの実装を優先したので、サウンド、テクスチャの色味、キャラクターと背景のモデルは
深く考えずに、とりあえず組み込んだ。
